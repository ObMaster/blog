import{_ as a,o as r,c as p,Q as o}from"./chunks/framework.6bbba70b.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"linux/Linux部署jar.md","filePath":"linux/Linux部署jar.md","lastUpdated":null}'),e={name:"linux/Linux部署jar.md"},n=o('<h3 id="_1、运行jar包的基本命令" tabindex="-1">1、运行jar包的基本命令 <a class="header-anchor" href="#_1、运行jar包的基本命令" aria-label="Permalink to &quot;1、运行jar包的基本命令&quot;">​</a></h3><p><strong>java -jar XXX.jar</strong></p><p>使用该命令后，若直接关闭窗口会导致程序退出</p><h3 id="_2、后台运行jar包" tabindex="-1">2、后台运行jar包 <a class="header-anchor" href="#_2、后台运行jar包" aria-label="Permalink to &quot;2、后台运行jar包&quot;">​</a></h3><p><strong>java -jar XXX.jar &amp;</strong></p><p>&amp;表示在后台运行</p><p>使用该命令后，直接关闭窗口并不会退出程序，但是注销用户时会导致程序退出</p><h3 id="_3、不挂断运行jar包" tabindex="-1">3、不挂断运行jar包 <a class="header-anchor" href="#_3、不挂断运行jar包" aria-label="Permalink to &quot;3、不挂断运行jar包&quot;">​</a></h3><p><strong>nohup java -jar XXX.jar &amp;</strong></p><p>nohup表示不挂断运行，但没有后台运行功能，因此需要与&amp;配合使用，此时相关输出信息被重定向到当前目录的nohup.out文件</p><h3 id="_4、使用输出信息的重定向文件" tabindex="-1">4、使用输出信息的重定向文件 <a class="header-anchor" href="#_4、使用输出信息的重定向文件" aria-label="Permalink to &quot;4、使用输出信息的重定向文件&quot;">​</a></h3><p><strong>nohup java -jar XXX.jar &gt; XXX.file &amp;</strong></p><p>指定将输出信息重定向到XXX.file文件中，而不是默认的nohup.out文件</p><h3 id="_5、-和nohup的区别" tabindex="-1">5、&amp;和nohup的区别 <a class="header-anchor" href="#_5、-和nohup的区别" aria-label="Permalink to &quot;5、&amp;和nohup的区别&quot;">​</a></h3><p>1） &amp;表示在后台运行</p><p>2） nohup表示不挂断运行，但没有后台功能，即当关闭控制台时，任务也会结束</p><p>nohup 的功能和&amp; 之间的功能并不相同。其中，nohup 可以使得命令永远运行下去和用户终端没有关系。当我们断开ssh 连接的时候不会影响他的运行。而&amp; 表示后台运行。当ssh 断开连接的时候（用户退出或挂起的时候），命令也自动退出。</p><p>3） 两者在标准输入输出上的区别</p><ul><li>java -jar XXX.jar &amp;</li></ul><p>​ 将任务放到后台，即使关闭控制台和当前session，任务依然继续运行，但标准输出信息会丢失</p><ul><li>nohup java -jar XXX.jar</li></ul><p>​ 关闭标准输入，控制台不能输入任何命令，重定向标准输出到指定文件</p><ul><li>nohup java -jar XXX.jar &amp;</li></ul><p>​ 将任务放到后台，控制台仍能输入命令（此为&amp;功能），</p><p>​ 标准输出内容被重定向到指定文件中（此为nohup功能）</p>',25),t=[n];function i(l,h,s,u,_,j){return r(),p("div",null,t)}const m=a(e,[["render",i]]);export{c as __pageData,m as default};
