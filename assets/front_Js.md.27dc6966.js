import{_ as e,o,c as t,Q as a}from"./chunks/framework.6bbba70b.js";const h=JSON.parse('{"title":"二、ES6","description":"","frontmatter":{},"headers":[],"relativePath":"front/Js.md","filePath":"front/Js.md","lastUpdated":null}'),r={name:"front/Js.md"},d=a('<h1 id="二、es6" tabindex="-1">二、ES6 <a class="header-anchor" href="#二、es6" aria-label="Permalink to &quot;二、ES6&quot;">​</a></h1><h2 id="_1、export和import" tabindex="-1">1、export和import <a class="header-anchor" href="#_1、export和import" aria-label="Permalink to &quot;1、export和import&quot;">​</a></h2><ul><li><p><code>export</code>命令用于规定模块的对外接口，<code>import</code>命令用于输入其他模块提供的功能。</p></li><li><p><code>import</code>命令接受一对大括号，里面指定要从其他模块导入的变量名。大括号里面的变量名，必须与被导入模块对外接口的名称相同。如果想为输入的变量重新取一个名字，<code>import</code>命令要使用<code>as</code>关键字，将输入的变量重命名。除了指定加载某个输出值，还可以使用整体加载，即用星号（<code>*</code>）指定一个对象，所有输出值都加载在这个对象上面。</p></li><li><p><code>export default</code>命令用于指定模块的默认输出。对应的<code>import</code>语句不需要使用大括号，可以用任意名称指向被导入模块输出的变量。</p><p>显然，一个模块只能有一个默认输出，因此<code>export default</code>命令只能使用一次。</p><p>本质上，<code>export default</code>就是输出一个叫做<code>default</code>的变量或方法，然后系统允许你为它取任意名字，所以它后面不能跟变量声明语句。</p></li></ul>',3),c=[d];function p(i,s,l,_,n,m){return o(),t("div",null,c)}const u=e(r,[["render",p]]);export{h as __pageData,u as default};
